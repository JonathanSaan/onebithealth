{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ResultIMC from \"../ResultIMC\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Form = function Form() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    height = _useState2[0],\n    setHeight = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    weight = _useState4[0],\n    setWeight = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    textButton = _useState6[0],\n    setTextButton = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    imc = _useState8[0],\n    setImc = _useState8[1];\n  var imcCalculater = function imcCalculater() {\n    if (weight != null && height != null) {\n      setHeight(null);\n      setHeight(null);\n      setMessageImc(\"seu IMC é igual:\");\n      setTextButton(\"Calcular novamente\");\n      return;\n    }\n    return setImc((weight / (height * height)).toFixed(2));\n  };\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Altura\"\n      }), _jsx(TextInput, {\n        onChangeText: setHeight,\n        value: height,\n        placeholder: \"Ex. 1.75\",\n        keyboardType: \"numeric\"\n      }), _jsx(Text, {\n        children: \"Peso\"\n      }), _jsx(TextInput, {\n        onChangeText: setWeight,\n        value: weight,\n        placeholder: \"Ex. 75.365\",\n        keyboardType: \"numeric\"\n      }), _jsx(Button, {\n        title: \"Calcular IMC\"\n      })]\n    }), _jsx(ResultIMC, {})]\n  });\n};\nexport default Form;","map":{"version":3,"names":["useState","View","Text","TextInput","Button","ResultIMC","jsx","_jsx","jsxs","_jsxs","Form","_useState","_useState2","_slicedToArray","height","setHeight","_useState3","_useState4","weight","setWeight","_useState5","_useState6","textButton","setTextButton","_useState7","_useState8","imc","setImc","imcCalculater","setMessageImc","toFixed","children","onChangeText","value","placeholder","keyboardType","title"],"sources":["/home/jonathan/Desktop/folders/projects/android/test1/src/components/Form/index.js"],"sourcesContent":["import { useState } from \"react\";\nimport { View, Text, TextInput, Button } from \"react-native\";\nimport ResultIMC from \"../ResultIMC\";\n\n\nconst Form = () => {\n    const [height, setHeight] = useState(0);\n    const [weight, setWeight] = useState(0);\n    const [textButton, setTextButton] = useState(\"\");\n\n    const [imc, setImc] = useState(0);\n\n    const imcCalculater = () => {\n        if (weight != null && height != null) {\n            setHeight(null);\n            setHeight(null);\n            setMessageImc(\"seu IMC é igual:\");\n            setTextButton(\"Calcular novamente\");\n            return;\n        }\n        return setImc((weight/(height * height)).toFixed(2));\n    };\n\n    return (\n        <View>\n            <View>\n                <Text>Altura</Text>\n                <TextInput onChangeText={setHeight} value={height} placeholder=\"Ex. 1.75\" keyboardType=\"numeric\" />\n                <Text>Peso</Text>\n                <TextInput onChangeText={setWeight} value={weight} placeholder=\"Ex. 75.365\" keyboardType=\"numeric\" />\n                <Button title=\"Calcular IMC\" />\n            </View>\n            <ResultIMC />\n        </View>\n    );\n};\n\nexport default Form;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAEjC,OAAOC,SAAS;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGrC,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS;EACf,IAAAC,SAAA,GAA4BX,QAAQ,CAAC,CAAC,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EACxB,IAAAI,UAAA,GAA4BhB,QAAQ,CAAC,CAAC,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAhCE,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EACxB,IAAAG,UAAA,GAAoCpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAzCE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAEhC,IAAAG,UAAA,GAAsBxB,QAAQ,CAAC,CAAC,CAAC;IAAAyB,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA1BE,GAAG,GAAAD,UAAA;IAAEE,MAAM,GAAAF,UAAA;EAElB,IAAMG,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IACxB,IAAIV,MAAM,IAAI,IAAI,IAAIJ,MAAM,IAAI,IAAI,EAAE;MAClCC,SAAS,CAAC,IAAI,CAAC;MACfA,SAAS,CAAC,IAAI,CAAC;MACfc,aAAa,CAAC,kBAAkB,CAAC;MACjCN,aAAa,CAAC,oBAAoB,CAAC;MACnC;IACJ;IACA,OAAOI,MAAM,CAAC,CAACT,MAAM,IAAEJ,MAAM,GAAGA,MAAM,CAAC,EAAEgB,OAAO,CAAC,CAAC,CAAC,CAAC;EACxD,CAAC;EAED,OACIrB,KAAA,CAACR,IAAI;IAAA8B,QAAA,GACDtB,KAAA,CAACR,IAAI;MAAA8B,QAAA,GACDxB,IAAA,CAACL,IAAI;QAAA6B,QAAA,EAAC;MAAM,EAAO,EACnBxB,IAAA,CAACJ,SAAS;QAAC6B,YAAY,EAAEjB,SAAU;QAACkB,KAAK,EAAEnB,MAAO;QAACoB,WAAW,EAAC,UAAU;QAACC,YAAY,EAAC;MAAS,EAAG,EACnG5B,IAAA,CAACL,IAAI;QAAA6B,QAAA,EAAC;MAAI,EAAO,EACjBxB,IAAA,CAACJ,SAAS;QAAC6B,YAAY,EAAEb,SAAU;QAACc,KAAK,EAAEf,MAAO;QAACgB,WAAW,EAAC,YAAY;QAACC,YAAY,EAAC;MAAS,EAAG,EACrG5B,IAAA,CAACH,MAAM;QAACgC,KAAK,EAAC;MAAc,EAAG;IAAA,EAC5B,EACP7B,IAAA,CAACF,SAAS,KAAG;EAAA,EACV;AAEf,CAAC;AAED,eAAeK,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}