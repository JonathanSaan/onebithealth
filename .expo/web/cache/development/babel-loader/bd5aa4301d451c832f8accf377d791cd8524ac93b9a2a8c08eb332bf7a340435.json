{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ResultIMC from \"./ResultIMC\";\nimport styles from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Form = function Form() {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    height = _useState2[0],\n    setHeight = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    weight = _useState4[0],\n    setWeight = _useState4[1];\n  var _useState5 = useState(\"preencha o peso e altura\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    messageImc = _useState6[0],\n    setMessageImc = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    imc = _useState8[0],\n    setImc = _useState8[1];\n  var _useState9 = useState(\"Calcular\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    textButton = _useState10[0],\n    setTextButton = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    errorMessage = _useState12[0],\n    setErrorMessage = _useState12[1];\n  var imcCalculater = function imcCalculater() {\n    if (weight != null && height != null) {\n      setImc((weight / (height * height)).toFixed(2));\n      setHeight();\n      setWeight();\n      setTextButton(\"Calcular novamente\");\n      setMessageImc(\"seu IMC é igual:\");\n      return;\n    }\n    setImc();\n    setTextButton(\"Calcular\");\n    setMessageImc(\"preencha o peso e altura\");\n  };\n  return _jsxs(View, {\n    style: styles.formContext,\n    children: [_jsxs(View, {\n      style: styles.form,\n      children: [_jsx(Text, {\n        style: styles.formLabel,\n        children: \"Altura\"\n      }), _jsx(TextInput, {\n        style: styles.formInput,\n        onChangeText: setHeight,\n        value: height,\n        placeholder: \"Ex. 1.75\",\n        keyboardType: \"numeric\"\n      }), _jsx(Text, {\n        style: styles.formLabel,\n        children: \"Peso\"\n      }), _jsx(TextInput, {\n        style: styles.formInput,\n        onChangeText: setWeight,\n        value: weight,\n        placeholder: \"Ex. 75.365\",\n        keyboardType: \"numeric\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.formButton,\n        onPress: function onPress() {\n          return imcCalculater();\n        },\n        children: _jsx(Text, {\n          style: styles.formTextButton,\n          children: textButton\n        })\n      })]\n    }), _jsx(ResultIMC, {\n      messageImc: messageImc,\n      imc: imc\n    })]\n  });\n};\nexport default Form;","map":{"version":3,"names":["useState","View","Text","TextInput","TouchableOpacity","ResultIMC","styles","jsx","_jsx","jsxs","_jsxs","Form","_useState","_useState2","_slicedToArray","height","setHeight","_useState3","_useState4","weight","setWeight","_useState5","_useState6","messageImc","setMessageImc","_useState7","_useState8","imc","setImc","_useState9","_useState10","textButton","setTextButton","_useState11","_useState12","errorMessage","setErrorMessage","imcCalculater","toFixed","style","formContext","children","form","formLabel","formInput","onChangeText","value","placeholder","keyboardType","formButton","onPress","formTextButton"],"sources":["/home/jonathan/Desktop/folders/projects/android/test1/src/components/Form/index.js"],"sourcesContent":["import { useState } from \"react\";\nimport { View, Text, TextInput, TouchableOpacity } from \"react-native\";\nimport ResultIMC from \"./ResultIMC\";\nimport styles from \"./style\";\n\n\nconst Form = () => {\n    const [height, setHeight] = useState();\n    const [weight, setWeight] = useState();\n    const [messageImc, setMessageImc] = useState(\"preencha o peso e altura\");\n    const [imc, setImc] = useState();\n    const [textButton, setTextButton] = useState(\"Calcular\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const imcCalculater = () => {\n        if (weight != null && height != null) {\n            setImc((weight/(height * height)).toFixed(2));\n            setHeight();\n            setWeight();\n            setTextButton(\"Calcular novamente\");\n            setMessageImc(\"seu IMC é igual:\");\n            return;\n        }\n        setImc();\n        setTextButton(\"Calcular\");\n        setMessageImc(\"preencha o peso e altura\");\n    };\n\n    return (\n        <View style={styles.formContext}>\n            <View style={styles.form}>\n                <Text style={styles.formLabel}>Altura</Text>\n                <TextInput style={styles.formInput} onChangeText={setHeight} value={height} placeholder=\"Ex. 1.75\" keyboardType=\"numeric\" />\n                <Text style={styles.formLabel}>Peso</Text>\n                <TextInput style={styles.formInput} onChangeText={setWeight} value={weight} placeholder=\"Ex. 75.365\" keyboardType=\"numeric\" />\n                <TouchableOpacity style={styles.formButton} onPress={() => imcCalculater()}>\n                    <Text style={styles.formTextButton}>{textButton}</Text>\n                </TouchableOpacity>\n            </View>\n            <ResultIMC messageImc={messageImc} imc={imc} />\n        </View>\n    );\n};\n\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}